rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // HELPER FUNCTIONS
    // ========================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Check if email is verified
    function isEmailVerified() {
      return isAuthenticated() && request.auth.token.email_verified == true;
    }
    
    // Check if user is the referrer of the document
    function isReferrer(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Validate user data structure
    function isValidUserData(data) {
      return data.keys().hasAll(['email', 'username', 'firstName', 'lastName']) &&
             data.email is string &&
             data.username is string &&
             data.firstName is string &&
             data.lastName is string &&
             data.email.matches('^[^@]+@[^@]+\\.[^@]+$') &&
             data.username.size() >= 3 &&
             data.username.size() <= 20 &&
             data.firstName.size() >= 1 &&
             data.firstName.size() <= 50 &&
             data.lastName.size() >= 1 &&
             data.lastName.size() <= 50;
    }
    
    // ========================================
    // USERS COLLECTION
    // ========================================
    
    match /users/{userId} {
      // Users can read their own data
      allow read: if isOwner(userId);
      
      // Users can read other users' data if they are the referrer
      allow read: if isAuthenticated() && 
                    resource.data.referredBy == request.auth.uid;
      
      // Users can read other users' data for leaderboard purposes
      allow read: if isAuthenticated();
      
      // Users can create their own document during registration
      allow create: if isOwner(userId) && 
                       isValidUserData(resource.data) &&
                       resource.data.uid == request.auth.uid &&
                       resource.data.email == request.auth.token.email;
      
      // Users can update their own data (with restrictions)
      allow update: if isOwner(userId) && 
                       resource.data.uid == request.auth.uid &&
                       request.resource.data.uid == request.auth.uid &&
                       request.resource.data.email == request.auth.token.email;
      
      // ========================================
      // USER SUBCOLLECTIONS
      // ========================================
      
      // Activities subcollection - for activity logging
      match /activities/{activityId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId);
        allow update: if false; // Activities cannot be modified once created
        allow delete: if false; // Activities cannot be deleted
      }
      
      // Notifications subcollection - for user notifications
      match /notifications/{notificationId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId);
        allow update: if isOwner(userId);
        allow delete: if isOwner(userId);
      }
    }
    
    // ========================================
    // DEFAULT DENY ALL
    // ========================================
    
    // Deny all other operations by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 